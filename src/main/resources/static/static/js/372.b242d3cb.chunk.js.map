{"version":3,"file":"static/js/372.b242d3cb.chunk.js","mappings":"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","sources":["styles/chat/ChatStyles.js","components/chat/ChatProfile.js","components/chat/ChatBoxComponent.js","pages/chat/ChatPage.js","styles/CommonStyles.js","styles/details/DetailsComponentStyles.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const PageWrapper = styled.div`\r\n  max-width: 1280px;\r\n  height: 900px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const ChatBox = styled.div`\r\n  width: 630px;\r\n  height: auto;\r\n  max-height: 850px;\r\n  flex-shrink: 0;\r\n  padding-left: 20px;\r\n  padding-top: 15px;\r\n  margin-right: 20px;\r\n  border: 1px solid #777;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nexport const ChatProfileBox = styled.div`\r\n  width: 600px;\r\n  height: 90px;\r\n  flex-shrink: 0;\r\n\r\n  cursor: pointer; /* 클릭 가능하도록 커서 스타일 지정 */\r\n  pointer-events: auto; /* 클릭 이벤트 활성화 */\r\n`;\r\n\r\nexport const ChatList = styled.div`\r\n  color: #000;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  margin-bottom: 45px;\r\n`;\r\n\r\nexport const ProductContentWrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline; /* 제품명과 날짜를 수평 정렬하기 위해 추가 */\r\n`;\r\n\r\nexport const ProductContent = styled.div`\r\n  width: 380px;\r\n\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  color: #777;\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  margin-left: 92px;\r\n  margin-top: 20px;\r\n  line-height: 15px; /* Match with height for accurate calculation */\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 3; /* Show up to 3 lines */\r\n  -webkit-box-orient: vertical;\r\n`;\r\n\r\nexport const CurrentDate = styled.div`\r\n  width: 80px;\r\n  height: 15px;\r\n  color: #777;\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  margin-left: 40px;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"@emotion/styled\";\r\nimport {\r\n  ProfileContainer,\r\n  ProfileImg,\r\n  ProfileName,\r\n} from \"../../styles/details/DetailsComponentStyles\";\r\n\r\nimport {\r\n  ProductContent,\r\n  CurrentDate,\r\n  ProductContentWrapper,\r\n  ChatProfileBox,\r\n} from \"../../styles/chat/ChatStyles\";\r\n\r\nconst dummyData = [\r\n  {\r\n    id: 1,\r\n    profileImage: \"/images/kong.jpg\",\r\n    profileName: \"프로필 이름 1\",\r\n    productContent: \"갤럭시 워치 4 골프 에디션 4 - 44mm 블루투스 (블랙 에디션)\",\r\n    currentDate: \"2024/01/14\",\r\n  },\r\n  {\r\n    id: 2,\r\n    profileImage: \"/images/kong.jpg\",\r\n    profileName: \"프로필 이름 2\",\r\n    productContent: \"다른 상품 내용...\",\r\n    currentDate: \"2024/01/15\",\r\n  },\r\n  // Add more dummy data as needed\r\n];\r\n\r\n// Copy the first two objects to create additional dummy data\r\nconst additionalDummyData = Array.from({ length: 10 }, (_, index) => ({\r\n  id: index + 3,\r\n  profileImage: \"/images/kong.jpg\",\r\n  profileName: `프로필 이름 ${index + 3}`,\r\n  productContent: `더미 상품 내용 ${index + 1}...`,\r\n  currentDate: \"2024/01/15\",\r\n}));\r\n\r\nconst allDummyData = [...dummyData, ...additionalDummyData];\r\n\r\nconst ChatProfile = ({ onProfileSelect }) => {\r\n  const [selectedProfile, setSelectedProfile] = useState(null);\r\n\r\n  const handleProfileSelect = profile => {\r\n    setSelectedProfile(profile);\r\n    onProfileSelect(profile); // Notify the parent component about the selected profile\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {allDummyData.map(data => (\r\n        <ChatProfileBox\r\n          key={data.id}\r\n          onClick={() => handleProfileSelect(data)}\r\n          selected={selectedProfile && selectedProfile.id === data.id}\r\n        >\r\n          <ProfileContainer>\r\n            <ProfileImg>\r\n              <img src={data.profileImage} alt=\"Profile Image\" />\r\n            </ProfileImg>\r\n            <ProfileName>{data.profileName}</ProfileName>\r\n          </ProfileContainer>\r\n          <ProductContentWrapper>\r\n            <ProductContent>{data.productContent}</ProductContent>\r\n            <CurrentDate>{data.currentDate}</CurrentDate>\r\n          </ProductContentWrapper>\r\n        </ChatProfileBox>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nChatProfile.propTypes = {\r\n  onProfileSelect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ChatProfile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst ChatBoxWrapper = styled.div``;\r\n\r\nconst ChatBoxContainer = styled.div`\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ChatBoxContent = styled.div`\r\n  width: 600px;\r\n  max-width: 100%; /* 최대 너비 설정 */\r\n  max-height: 900px;\r\n  height: auto;\r\n  box-sizing: border-box;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst NoChatSelectedMessage = styled.p`\r\n  font-size: 16px;\r\n  text-align: center;\r\n  width: 600px;\r\n`;\r\n\r\nconst ChatInput = styled.input`\r\n  width: 580px;\r\n  max-width: 100%; /* 최대 너비 설정 */\r\n  height: 50px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n  font-size: 16px;\r\n  background: #f2f2ff;\r\n  padding-left: 10px;\r\n  bottom: 10px;\r\n`;\r\n\r\nconst ProfileInfoContainer = styled.div`\r\n  display: inline-block;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst ChatText = styled.div`\r\n  max-height: 700px;\r\n  min-height: 690px;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nconst ProfileName = styled.p`\r\n  font-size: 16px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ChatMessage = styled.div`\r\n  position: relative;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  background-color: ${({ isSender }) => (isSender ? \"#DCF8C6\" : \"#E5E5EA\")};\r\n  align-self: ${({ isSender }) => (isSender ? \"flex-end\" : \"flex-start\")};\r\n`;\r\n\r\nconst ChatBoxComponent = ({ selectedProfile, messages }) => {\r\n  const [inputMessage, setInputMessage] = useState(\r\n    localStorage.getItem(\"inputMessage\") || \"\",\r\n  ); // State to store input message\r\n\r\n  const [chatMessages, setChatMessages] = useState(\r\n    JSON.parse(localStorage.getItem(\"chatMessages\")) || [],\r\n  ); // State to store chat messages\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"inputMessage\", inputMessage);\r\n  }, [inputMessage]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"chatMessages\", JSON.stringify(chatMessages));\r\n  }, [chatMessages]);\r\n\r\n  const handleInputChange = e => {\r\n    setInputMessage(e.target.value); // Update input message state\r\n  };\r\n\r\n  const handleKeyPress = e => {\r\n    if (e.key === \"Enter\" && inputMessage.trim() !== \"\") {\r\n      // Send message when Enter key is pressed and input message is not empty\r\n      const newMessage = {\r\n        text: inputMessage,\r\n        isSender: true,\r\n      }; // New message object\r\n      setChatMessages([...chatMessages, newMessage]); // Add new message to chatMessages\r\n      setInputMessage(\"\"); // Clear input after sending message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChatBoxWrapper>\r\n      {selectedProfile ? (\r\n        <ChatBoxContainer>\r\n          <ChatBoxContent>\r\n            <img\r\n              src={selectedProfile.profileImage}\r\n              alt=\"Profile\"\r\n              style={{\r\n                width: \"60px\",\r\n                height: \"60px\",\r\n                borderRadius: \"50%\",\r\n                marginBottom: \"20px\",\r\n              }}\r\n            />\r\n            <ProfileInfoContainer>\r\n              <ProfileName>{selectedProfile.profileName}</ProfileName>\r\n              <p>{selectedProfile.productContent}</p>\r\n            </ProfileInfoContainer>\r\n            <ChatText>\r\n              {chatMessages.map((message, index) => (\r\n                <ChatMessage key={index} isSender={message.isSender}>\r\n                  {message.text}\r\n                </ChatMessage>\r\n              ))}\r\n            </ChatText>\r\n          </ChatBoxContent>\r\n          <ChatInput\r\n            type=\"text\"\r\n            placeholder=\"메시지를 입력하세요\"\r\n            value={inputMessage} // Bind input value to state\r\n            onChange={handleInputChange} // Handle input change\r\n            onKeyPress={handleKeyPress} // Handle Enter key press\r\n          />\r\n        </ChatBoxContainer>\r\n      ) : (\r\n        <NoChatSelectedMessage>\r\n          프로필을 선택하여 채팅을 시작하세요.\r\n        </NoChatSelectedMessage>\r\n      )}\r\n    </ChatBoxWrapper>\r\n  );\r\n};\r\n\r\nexport default ChatBoxComponent;\r\n","import React, { useState } from \"react\";\r\nimport { PageWrapper, ChatBox, ChatList } from \"../../styles/chat/ChatStyles\";\r\nimport ChatProfile from \"../../components/chat/ChatProfile\";\r\n\r\nimport ChatBoxComponent from \"../../components/chat/ChatBoxComponent\";\r\n\r\nconst ChatPage = () => {\r\n  const [selectedProfile, setSelectedProfile] = useState(null);\r\n\r\n  const handleProfileSelect = profile => {\r\n    setSelectedProfile(profile);\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <ChatBox>\r\n        <ChatList>\r\n          구매 목록 <img src=\"/images/chat/Vector.svg\" alt=\"Vector\" />\r\n        </ChatList>\r\n        <ChatProfile onProfileSelect={handleProfileSelect} />\r\n      </ChatBox>\r\n      <ChatBox>\r\n        <ChatBoxComponent selectedProfile={selectedProfile} />\r\n      </ChatBox>\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n","export const Common = {\r\n  // 숫자가 높을수록 밝은 색\r\n  color: {\r\n    primary: \"#2C39B5\",\r\n    p100: \"#000000\",\r\n    p200: \"#4B4B4B\",\r\n    p300: \"#777777\",\r\n    p400: \"#E4E7FF\",\r\n    p500: \"#F2F2FF\",\r\n    p600: \"#FFFFFF\",\r\n  },\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { Common } from \"../CommonStyles\";\r\n\r\n// Like styles\r\nexport const StyledButton = styled.button`\r\n  display: block;\r\n  margin-top: 50px;\r\n  right: 12px;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  img {\r\n    width: 40px;\r\n    height: 35px;\r\n  }\r\n`;\r\n\r\n// Pay styles\r\nexport const Overlay = styled.div`\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  z-index: 100;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n  width: 100%;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 1);\r\n`;\r\n\r\nexport const Box = styled.div`\r\n  padding: 22px;\r\n  width: 470px;\r\n  height: 240px;\r\n  display: flex;\r\n  align-items: flex-start;\r\n\r\n  border-bottom: 1px solid ${Common.color.primary};\r\n  /* 모달이 상단에 위치하도록 수정 */\r\n  position: fixed;\r\n  top: 200px; /* 원하는 높이로 수정 */\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 100;\r\n  background-color: #fff;\r\n`;\r\n\r\nexport const SubBox = styled.div`\r\n  padding: 20px;\r\n  width: 470px;\r\n  max-height: 380px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 5px;\r\n\r\n  position: fixed;\r\n  top: 440px; /* 원하는 높이로 수정 */\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 100;\r\n  background-color: #fff;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 190px;\r\n  height: 190px;\r\n  margin-right: 25px;\r\n  margin-bottom: 40px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const TextContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  width: 202px;\r\n  height: 37px;\r\n  color: #000;\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const Duration = styled.div`\r\n  width: 205px;\r\n  height: 20px;\r\n  color: #000;\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport const PriceRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const PriceLabel = styled.div`\r\n  width: auto;\r\n  height: 14px;\r\n\r\n  color: #000;\r\n\r\n  font-size: 13px;\r\n\r\n  font-weight: 400;\r\n\r\n  margin-bottom: 18px;\r\n`;\r\n\r\nexport const PriceValue = styled(PriceLabel)`\r\n  width: 75px;\r\n  text-align: right;\r\n`;\r\n\r\nexport const TotalPrice = styled.div`\r\n  border-bottom: 1px solid ${Common.color.primary};\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const BtnCard = styled.div`\r\n  width: 430px;\r\n  height: 70px;\r\n  flex-shrink: 0;\r\n  border-radius: 5px;\r\n\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #000;\r\n  font-size: 16px;\r\n  display: flex;\r\n\r\n  text-align: center;\r\n  cursor: pointer;\r\n\r\n  color: ${props => (props.clicked ? \"#fff\" : \"#000\")};\r\n  background-color: ${props => (props.clicked ? \"#2c39b5\" : \"#f2f2ff\")};\r\n\r\n  &:hover {\r\n    background: #2c39b5;\r\n    color: #f2f2ff;\r\n  }\r\n`;\r\nexport const BtnPayList = styled(BtnCard)`\r\n  width: 140px;\r\n  height: 70px;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nexport const BtnCancel = styled.div`\r\n  width: 200px;\r\n  height: 46px;\r\n  flex-shrink: 0;\r\n  border-radius: 10px;\r\n  border: 1px solid #2c39b5;\r\n  color: #2c39b5;\r\n  margin-top: 45px;\r\n  font-family: Inter;\r\n  font-size: 16px;\r\n\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: #2c39b5;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nexport const BtnPay = styled(BtnCancel)`\r\n  color: #2c39b5;\r\n\r\n  margin-left: 20px;\r\n`;\r\n\r\n//ProFile styles\r\nexport const ProfileContainer = styled.div`\r\n  width: 100%;\r\n  height: 20px;\r\n  display: flex;\r\n\r\n  gap: 1rem;\r\n`;\r\n\r\nexport const SellerProfileContainer = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  position: absolute;\r\n  margin-left: 500px;\r\n  gap: 1rem;\r\n`;\r\n\r\nexport const ProfileImg = styled.div`\r\n  width: 70px;\r\n  height: 70px;\r\n  box-sizing: border-box;\r\n  border-radius: 45px;\r\n  overflow: hidden;\r\n  font-size: 16px;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const ProfileName = styled.div`\r\n  width: 120px;\r\n  height: 20px;\r\n  color: #000;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  margin-left: 12px;\r\n`;\r\n\r\n//Review styles\r\n\r\nexport const ReviewFormStyle = styled.div`\r\n  width: 1260px;\r\n  height: 380px;\r\n  flex-shrink: 0;\r\n  border-radius: 10px;\r\n  border: 1px solid #2c39b5;\r\n  padding-left: 20px;\r\n  padding-top: 15px;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const ReviewProfile = styled.div`\r\n  margin-top: 25px;\r\n\r\n  width: 1220px;\r\n  height: auto;\r\n  flex-shrink: 0;\r\n  position: relative; /* 상대 위치 설정 */\r\n`;\r\n\r\nexport const ReviewProfileLine = styled.div`\r\n  width: 100%;\r\n\r\n  border-bottom: 1px solid #2c39b5;\r\n  margin-top: 25px;\r\n`;\r\n\r\nexport const CurrentDate = styled.div`\r\n  width: 80px;\r\n  height: 15px;\r\n  color: #777;\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n\r\n  margin-left: auto;\r\n`;\r\n\r\nexport const BtnStyles = styled.button`\r\n  display: flex;\r\n  width: 103px;\r\n  height: 36px;\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-shrink: 0;\r\n  margin: auto;\r\n  margin-top: 10px;\r\n\r\n  background-color: #fff;\r\n  border-radius: 50px;\r\n  border: 1px solid #2c39b5;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: #2c39b5;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nexport const BtnReivew = styled(BtnStyles)`\r\n  width: 79px;\r\n  margin-right: 60px;\r\n  margin-top: -20px;\r\n`;\r\n\r\nexport const ReviewText = styled.div`\r\n  width: 550px;\r\n  height: auto;\r\n  color: #777;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  margin-left: 92px;\r\n  margin-top: 10px;\r\n  white-space: pre-line;\r\n`;\r\n"],"names":["PageWrapper","styled","div","_templateObject","_taggedTemplateLiteral","ChatBox","_templateObject2","ChatProfileBox","_templateObject3","ChatList","_templateObject4","ProductContentWrapper","_templateObject5","ProductContent","_templateObject6","CurrentDate","_templateObject7","allDummyData","id","profileImage","profileName","productContent","currentDate","Array","from","length","_","index","concat","_ref","onProfileSelect","selectedProfile","setSelectedProfile","useState","_jsx","_Fragment","children","map","data","_jsxs","onClick","handleProfileSelect","profile","selected","ProfileContainer","ProfileImg","src","alt","ProfileName","ChatBoxWrapper","ChatBoxContainer","ChatBoxContent","NoChatSelectedMessage","p","ChatInput","input","ProfileInfoContainer","ChatText","_templateObject8","ChatMessage","_templateObject9","isSender","_ref2","_ref3","messages","inputMessage","setInputMessage","localStorage","getItem","chatMessages","setChatMessages","JSON","parse","useEffect","setItem","stringify","style","width","height","borderRadius","marginBottom","message","text","type","placeholder","value","onChange","e","target","onKeyPress","key","trim","newMessage","ChatPage","ChatProfile","ChatBoxComponent","Common","color","primary","p100","p200","p300","p400","p500","p600","StyledButton","button","Overlay","Box","SubBox","Image","img","TextContainer","Title","h3","Duration","PriceRow","_templateObject10","PriceLabel","_templateObject11","PriceValue","_templateObject12","TotalPrice","_templateObject13","BtnCard","_templateObject14","props","clicked","BtnPayList","_templateObject15","BtnCancel","_templateObject16","BtnPay","_templateObject17","_templateObject18","SellerProfileContainer","_templateObject19","_templateObject20","_templateObject21","ReviewFormStyle","_templateObject22","ReviewProfile","_templateObject23","ReviewProfileLine","_templateObject24","BtnStyles","_templateObject25","_templateObject26","BtnReivew","_templateObject27","ReviewText","_templateObject28"],"sourceRoot":""}