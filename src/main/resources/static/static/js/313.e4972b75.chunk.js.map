{"version":3,"file":"static/js/313.e4972b75.chunk.js","mappings":"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","sources":["api/main/mainMore_api.js","api/main/main_api.js","components/sideBarStyle.js","components/SideBar.js","pages/main/MainMorePage.js","styles/CommonStyles.js","styles/main/mainMoreStyle.js","util/jwtUtil.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { jwtAxios } from \"../../util/jwtUtil\";\r\nconst path = `${SERVER_URL}/api`;\r\n\r\nconst failPostDatas = () => {\r\n  const navigate = useNavigate();\r\n  navigate(\"/\");\r\n};\r\n\r\nexport const getMoreProduct = async (pageNum, categoryId, subCategoryId, sortType) => {\r\n  try {\r\n    let url;\r\n    if (sortType) url = `${path}/prod?sort=${sortType}&page=${pageNum}&mc=${categoryId}&sc=${subCategoryId}`;\r\n    else url = `${path}/prod?page=${pageNum}&mc=${categoryId}&sc=${subCategoryId}`;\r\n    const res = await axios.get(url);\r\n\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    failPostDatas(\"/\");\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { jwtAxios } from \"../../util/jwtUtil\";\r\nconst path = `${SERVER_URL}/api`;\r\n\r\nconst failPostDatas = () => {\r\n  // const navigate = useNavigate();\r\n  // navigate(\"/\");\r\n};\r\n\r\nexport const getProductFirst = async () => {\r\n  try {\r\n    const url = `${path}/prod/main?mc=1&mc=2&mc=3&mc=4&mc=5&sc=1&sc=1&sc=1&sc=1&sc=1`;\r\n    const res = await axios.get(url);\r\n    console.log(res);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    // failPostDatas(\"/\");\r\n  }\r\n};\r\nexport const getProduct = async (mainCategoryId, subCategoryId) => {\r\n  try {\r\n    const url = `${path}/prod/main?mc=${mainCategoryId}&sc=${subCategoryId}`;\r\n    const res = await axios.get(url);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    // failPostDatas(\"/\");\r\n  }\r\n};\r\n\r\n// 상품 상세 정보 출력\r\nexport const getProductDetail = async serverData => {\r\n  try {\r\n    // const serverData = {\r\n    //   mainCategoryId: id,\r\n    //   subCategoryId: focus + 1,\r\n    //   iproduct: _item.iproduct,\r\n    // };\r\n    // http://localhost:3000/api/prod/1/1/75?iproduct=75\r\n    // http://112.222.157.156:5225/api/prod/1/1/%7Biproduct%7D?iproduct=75\r\n    // const url = `${path}/prod/${serverData.mainCategoryId}/${serverData.subCategoryId}/${serverData.iproduct}`;\r\n    // const url = `${path}/prod/${serverData.mainCategoryId}/${serverData.subCategoryId}/${serverData.iproduct}?iproduct=${serverData.iproduct}`;\r\n    const url = `${path}/prod/${serverData.mainCategoryId}/${serverData.subCategoryId}/{iproduct}?iproduct=${serverData.iproduct}`;\r\n    const res = await axios.get(url);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    // failPostDatas(\"/\");\r\n  }\r\n};\r\n\r\nexport const getMoreProduct = async (categoryId, subCategoryId, pageNum) => {\r\n  try {\r\n    const url = `${path}/prod/${categoryId}/${subCategoryId}?page=${pageNum}`;\r\n    const res = await axios.get(url);\r\n\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    // failPostDatas(\"/\");\r\n  }\r\n};\r\n\r\nexport const postProduct = async () => {\r\n  try {\r\n    const res = await axios.post(`${path}`);\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n    failPostDatas(\"/\");\r\n  }\r\n};\r\n\r\nexport const putProduct = async () => {\r\n  try {\r\n    const res = await axios.put(`${path}`);\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n    failPostDatas(\"/\");\r\n  }\r\n};\r\n\r\nexport const patchProduct = async () => {\r\n  try {\r\n    const res = await axios.patch(`${path}`);\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n    failPostDatas(\"/\");\r\n  }\r\n};\r\n\r\nexport const deleteProduct = async () => {\r\n  try {\r\n    const res = await axios.delete(`${path}`);\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n    failPostDatas(\"/\");\r\n  }\r\n};","import styled from \"@emotion/styled\";\r\nimport { Common } from \"../styles/CommonStyles\";\r\n\r\nexport const Wrap = styled.div`\r\n  z-index: 3;\r\n  position: fixed;\r\n  top: 300px;\r\n  right: 50px;\r\n`;\r\n\r\nexport const SideBarWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 60px;\r\n  height: 400px;\r\n  background-color: #eeeef1;\r\n  border-radius: 30px;\r\n`;\r\n\r\nexport const ButtonWrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  gap: 40px;\r\n  padding: 10px;\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    p {\r\n      padding-top: 3px;\r\n      font-size: 1.4rem;\r\n      color: ${Common.color.p300};\r\n    }\r\n  }\r\n`;\r\nexport const Write = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  background: url(\"/images/main/plus.svg\");\r\n\r\n  background-repeat: no-repeat;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\nexport const Chat = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  background: url(\"/images/main/chat.svg\") center;\r\n\r\n  background-repeat: no-repeat;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Like = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  background: url(\"/images/main/heart.svg\");\r\n\r\n  background-repeat: no-repeat;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\nexport const Profile = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  background: url(\"/images/main/profile.svg\");\r\n\r\n  background-repeat: no-repeat;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\nexport const Call = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  background: url(\"/images/main/phone.svg\");\r\n\r\n  background-repeat: no-repeat;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  ButtonWrap,\r\n  Call,\r\n  Chat,\r\n  Like,\r\n  Profile,\r\n  SideBarWrap,\r\n  Wrap,\r\n  Write,\r\n} from \"./sideBarStyle\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const SideBar = ({ setSelectedItem, setActiveBtn }) => {\r\n  const handleLinkClick = subItem => {\r\n    if (setSelectedItem && setActiveBtn) {\r\n      setSelectedItem(subItem);\r\n      setActiveBtn(subItem);\r\n    }\r\n    sessionStorage.setItem(\"selectedItem\", subItem);\r\n  };\r\n\r\n  return (\r\n    <Wrap>\r\n      <SideBarWrap>\r\n        <ButtonWrap>\r\n          <Link to=\"/write\">\r\n            <div>\r\n              <Write></Write>\r\n              <p>등록</p>\r\n            </div>\r\n          </Link>\r\n          <Link to=\"/\">\r\n            <div>\r\n              <Chat></Chat>\r\n              <p>채팅</p>\r\n            </div>\r\n          </Link>\r\n          <Link\r\n            to=\"/my?interest\"\r\n            onClick={() => {\r\n              handleLinkClick(\"관심 목록\");\r\n            }}\r\n          >\r\n            <div>\r\n              <Like></Like>\r\n              <p>관심</p>\r\n            </div>\r\n          </Link>\r\n          <Link\r\n            to=\"/my\"\r\n            onClick={() => {\r\n              handleLinkClick(\"대여중\");\r\n            }}\r\n          >\r\n            <div>\r\n              <Profile></Profile>\r\n              <p>MY</p>\r\n            </div>\r\n          </Link>\r\n          {/* <Link to=\"/customer\">\r\n            <div>\r\n              <Call></Call>\r\n              <p>고객센터</p>\r\n            </div>\r\n          </Link> */}\r\n        </ButtonWrap>\r\n      </SideBarWrap>\r\n    </Wrap>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { SideBar } from \"../../components/SideBar\";\r\nimport { MoreWrap } from \"../../styles/main/mainMoreStyle\";\r\nimport { Pagination } from \"antd\";\r\nimport Layout from \"../../layouts/Layout\";\r\nimport { getMoreProduct } from \"../../api/main/mainMore_api\";\r\nimport { getProductDetail } from \"../../api/main/main_api\";\r\n\r\nconst region = [\r\n  {\r\n    title: \"대구광역시\",\r\n    list: [\r\n      \"달서구\",\r\n      \"중구\",\r\n      \"동구\",\r\n      \"서구\",\r\n      \"남구\",\r\n      \"북구\",\r\n      \"수성구\",\r\n      \"달성군\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"서울특별시\",\r\n    list: [\r\n      \"종로구\",\r\n      \"중구\",\r\n      \"용산구\",\r\n      \"성동구\",\r\n      \"광진구\",\r\n      \"동대문구\",\r\n      \"중랑구\",\r\n      \"성북구\",\r\n      \"강북구\",\r\n      \"도봉구\",\r\n      \"노원구\",\r\n      \"은평구\",\r\n      \"서대문구\",\r\n      \"마포구\",\r\n      \"양천구\",\r\n      \"강서구\",\r\n      \"구로구\",\r\n      \"금천구\",\r\n      \"영등포구\",\r\n      \"동작구\",\r\n      \"관악구\",\r\n      \"서초구\",\r\n      \"강남구\",\r\n      \"송파구\",\r\n      \"강동구\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"부산광역시\",\r\n    list: [\r\n      \"중구\",\r\n      \"서구\",\r\n      \"동구\",\r\n      \"영도구\",\r\n      \"부산진구\",\r\n      \"동래구\",\r\n      \"남구\",\r\n      \"북구\",\r\n      \"해운대구\",\r\n      \"사하구\",\r\n      \"금정구\",\r\n      \"강서구\",\r\n      \"연제구\",\r\n      \"수영구\",\r\n      \"사상구\",\r\n      \"기장군\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"인천광역시\",\r\n    list: [\r\n      \"중구\",\r\n      \"동구\",\r\n      \"미추홀구\",\r\n      \"연수구\",\r\n      \"남동구\",\r\n      \"부평구\",\r\n      \"계양구\",\r\n      \"서구\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"광주광역시\",\r\n    list: [\"동구\", \"서구\", \"남구\", \"북구\", \"광산구\"],\r\n  },\r\n  {\r\n    title: \"대전광역시\",\r\n    list: [\"동구\", \"중구\", \"서구\", \"유성구\", \"대덕구\"],\r\n  },\r\n  {\r\n    title: \"울산광역시\",\r\n    list: [\"중구\", \"남구\", \"동구\", \"북구\"],\r\n  },\r\n];\r\n\r\nconst MainMorePage = () => {\r\n  const navigate = useNavigate(`/details/`); // useNavigate 훅을 사용하여 navigate 함수 가져오기\r\n\r\n  const location = useLocation();\r\n  const { pathname, state } = location;\r\n  const urlParseArr = pathname.split(\"/\");\r\n  const parseMainCategory = parseInt(urlParseArr[3]);\r\n  const parseSubCategory = parseInt(urlParseArr[4]);\r\n\r\n  // 페이지 번호\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const [sortType, setSortType] = useState(0);\r\n  // 전지역 데이터\r\n  const [datas, setDatas] = useState([]);\r\n  // 지역별 시, 구 분류 데이터\r\n  const [filterData, setFilterData] = useState([]);\r\n  // 지역 선택 관리\r\n  const [regionNum, setRegionNum] = useState(0);\r\n  const [districtNum, setDistrictNum] = useState(0);\r\n\r\n  const fetchData = async (pageNum, _sortType) => {\r\n    try {\r\n      const res = await getMoreProduct(\r\n        pageNum,\r\n        parseMainCategory,\r\n        parseSubCategory,\r\n        _sortType,\r\n      );\r\n      setDatas(res);\r\n      console.log(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleRegionChange = e => {\r\n    const regionIndex = region.findIndex(item => item.title === e.target.value);\r\n    setRegionNum(regionIndex);\r\n    setDistrictNum(0);\r\n  };\r\n\r\n  const regionFilter = e => {\r\n    const selectedRegion = e.target.value;\r\n    const districtIndex = region[regionNum].list.indexOf(selectedRegion);\r\n    setDistrictNum(districtIndex);\r\n  };\r\n\r\n  const handlePageChange = _tempPage => {\r\n    setPageNum(_tempPage);\r\n  };\r\n\r\n  // 02-01 소연 \r\n  useEffect(() => {\r\n    if (sortType !== 0) fetchData(pageNum, sortType);\r\n    else fetchData(pageNum);\r\n  }, [pageNum, sortType]);\r\n\r\n  useEffect(() => {\r\n    const regionData = datas.filter(item =>\r\n      item.addr.includes(region[regionNum].title.slice(0, 2)),\r\n    );\r\n    const districtData = regionData.filter(item =>\r\n      item.addr.includes(region[regionNum].list[districtNum]),\r\n    );\r\n    setFilterData(districtData);\r\n  }, [districtNum, datas, regionNum]);\r\n\r\n  // details 페이지로 이동\r\n  const handlePageChangeDetails = _item => {\r\n    const url = `/details/${_item.categories.mainCategory}/${_item.categories.subCategory}/${_item.iproduct}`;\r\n    console.log(\"wowo\", _item);\r\n    const serverData = {\r\n      mainCategoryId: _item.categories.mainCategory,\r\n      subCategoryId: _item.categories.subCategory,\r\n      iproduct: _item.iproduct,\r\n    };\r\n    console.log(serverData);\r\n    const res = getProductDetail(serverData);\r\n    navigate(url);\r\n    console.log(res);\r\n  };\r\n\r\n\r\n  return (\r\n    <Layout>\r\n      <SideBar />\r\n      <MoreWrap>\r\n        <div className=\"header-wrap\">\r\n          <div className=\"header-cate-wrap\">\r\n            <div>{state && state.title ? state.title : \"Default Title\"}</div>\r\n          </div>\r\n          <div>\r\n            <div className=\"bt-wrap\">\r\n              <div>\r\n                <button onClick={() => setSortType(0)}>최신순</button>\r\n                <img src=\"/images/main/line.svg\" />\r\n                <button onClick={() => setSortType(2)}>조회순</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"region-wrap\">\r\n              <select onChange={handleRegionChange}>\r\n                {region.map((item, index) => {\r\n                  return (\r\n                    <option key={`regionTitle${index}`}>{item.title}</option>\r\n                  );\r\n                })}\r\n              </select>\r\n              <select\r\n                onChange={e => regionFilter(e)}\r\n                value={region[regionNum].list[districtNum]}\r\n              >\r\n                {region[regionNum].list.map((item, index) => {\r\n                  return <option key={`regionList${index}`}>{item}</option>;\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"main-wrap\">\r\n          {filterData &&\r\n            filterData.map((item, index) => (\r\n              <div\r\n                className=\"item-wrap\"\r\n                key={`MainMore-item-${index}`}\r\n                onClick={() => handlePageChangeDetails(item)}\r\n              >\r\n                <img\r\n                  className=\"item-image\"\r\n                  src={`/pic/${item.prodMainPic}`}\r\n                  alt=\"제품 이미지\"\r\n                />\r\n\r\n                <div className=\"desc-wrap\">\r\n                  <span className=\"desc-title\">{item.title}</span>\r\n                  <hr></hr>\r\n                  <div className=\"desc-price\">\r\n                    {item.rentalPrice.toLocaleString()}\r\n                  </div>\r\n                  <div className=\"desc-addr\">{item.addr}</div>\r\n                  <div className=\"view\">조회수{item.view}</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div className=\"pagination\">\r\n          <Pagination\r\n            current={pageNum}\r\n            onChange={handlePageChange}\r\n            total={50}\r\n            pageSize={10}\r\n          />\r\n        </div>\r\n      </MoreWrap>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MainMorePage;\r\n","export const Common = {\r\n  // 숫자가 높을수록 밝은 색\r\n  color: {\r\n    primary: \"#2C39B5\",\r\n    p100: \"#000000\",\r\n    p200: \"#4B4B4B\",\r\n    p300: \"#777777\",\r\n    p400: \"#E4E7FF\",\r\n    p500: \"#F2F2FF\",\r\n    p600: \"#FFFFFF\",\r\n  },\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const MoreWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 30px;\r\n  \r\n\r\n  .header-wrap {\r\n    width: 1260px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding-bottom: 30px;\r\n    \r\n\r\n  .header-cate-wrap {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    max-width: 100%;\r\n    gap: 10px;\r\n    height: 30px;\r\n    font-size: 20px;\r\n  }\r\n  .bt-wrap {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    padding-bottom: 20px;\r\n    >div{\r\n      display: flex;\r\n      width: 150px;\r\n      justify-content: space-evenly;\r\n    }\r\n    button {\r\n      border: none;\r\n      background: transparent;\r\n      font-size: 15px;\r\n      color: #777;\r\n      cursor: pointer;\r\n    }\r\n    img {\r\n      width: 2px;\r\n      height: 15px;\r\n    }\r\n    option {\r\n      background-color: #fff;\r\n    }\r\n  }\r\n  .region-wrap {\r\n      width: 310px;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      select {\r\n        width: 150px;\r\n        height: 30px;\r\n        border: 2px solid #2c39b5;\r\n      }\r\n    }\r\n}\r\n\r\n\r\n  .main-wrap {\r\n    max-width: 1260px;\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-gap: 30px;\r\n\r\n    .desc-wrap {\r\n      line-height: 30px;\r\n      text-align: left;\r\n      .desc-title {\r\n        font-size: 15px;\r\n        color: #777;\r\n      }\r\n      hr {\r\n        width: 280px;\r\n        border: 1px solid #2c39b5;\r\n        margin: 0;\r\n      }\r\n      .desc-price {\r\n        font-weight: 500;\r\n        font-size: 20px;\r\n      }\r\n      .desc-ad {\r\n        color: #777;\r\n        font-size: 14px;\r\n      }\r\n      .view {\r\n        color: #777;\r\n        font-size: 12px;\r\n      }\r\n    }\r\n  }\r\n  .item-wrap {\r\n    position: relative;\r\n    cursor: pointer;\r\n    .item-image {\r\n      width: 300px;\r\n      height: 300px;\r\n      border: none;\r\n      border-radius: 4px;\r\n    }\r\n    \r\n  \r\n  }\r\n  .ant-select-show-search {\r\n    display: none;\r\n  }\r\n\r\n  .pagination {\r\n    padding-top: 80px;\r\n    padding-bottom: 80px;\r\n  }\r\n\r\n`;","import axios from \"axios\";\r\nimport { getCookie, setCookie } from \"./cookieUtil\";\r\nimport { SERVER_URL } from \"../api/config\";\r\n\r\nexport const jwtAxios = axios.create();\r\n\r\nconst beforeReq = config => {\r\n  // console.log(\"1. 요청전 전달\", config);\r\n  // console.log(\"2. 쿠키로 토큰가져오기\");\r\n  const memberInfo = getCookie(\"member\");\r\n\r\n  if (!memberInfo) {\r\n    // console.log(\"쿠키 정보 없네요.\");\r\n    return Promise.reject({ response: { data: { error: \"Login하세요.\" } } });\r\n  }\r\n  // console.log(\"3. 쿠키에서 토큰 정보를 뜯는다.\");\r\n  const { accessToken } = memberInfo;\r\n  // console.log(\"4. 엑세스토큰 정보\", accessToken);\r\n  config.headers.Authorization = `Bearer ${accessToken}`;\r\n  return config;\r\n};\r\n\r\nconst requestFail = error => {\r\n  // console.log(\"요청후 실패시\", error);\r\n  return Promise.reject(error);\r\n};\r\n\r\nconst refreshJWT = async (accessToken, refreshToken) => {\r\n  const host = SERVER_URL;\r\n  const header = { headers: { Authorization: `Bearer ${accessToken}` } };\r\n  const res = await axios.get(\r\n    `${host}/api/user/refresh-token?refreshToken=${refreshToken}`,\r\n    header,\r\n  );\r\n  // console.log(\"1. refreshToken 토큰 요청\");\r\n  // console.log(\"2. 백엔드에서 새로 준 값\", res.data);\r\n  return res.data;\r\n};\r\n\r\nconst beforeRes = async res => {\r\n  // console.log(\"Response 전처리\", res);\r\n  const data = res.data;\r\n  // console.log(\"1. Response 오기전 서버 전달해준 데이터, data\");\r\n  if (data && data.error === \"ERROR_ACCESS_TOKEN\") {\r\n    // console.log(\"2. 일반적 오류가 아닌 엑세스 토큰 에러입니다.\");\r\n    // console.log(\"3. 새로운 토큰을 요청해야 합니다.\");\r\n    // console.log(\"4. 쿠키에 있는 정보를 읽어서 다시 시도합니다.\");\r\n    const memberInfo = getCookie(\"member\");\r\n    // console.log(\"5. 쿠키 토큰 정보 AccessToken\", memberInfo.accessToken);\r\n    // console.log(\"6. 쿠키 토큰 정보 RefreshToken\", memberInfo.refreshToken);\r\n    // console.log(\"7. 위의 정보로 새로운 토큰을 요청합니다.\");\r\n    const result = await refreshJWT(\r\n      memberInfo.accessToken,\r\n      memberInfo.refreshToken,\r\n    );\r\n    // console.log(\"8. 요청 이후 되돌아와서 새로운 정보로 쿠키를 업데이트\");\r\n    (memberInfo.accessToken = result.accessToken),\r\n      (memberInfo.refreshToken = result.refreshToken),\r\n      setCookie(\"member\", JSON.stringify(memberInfo));\r\n\r\n    // console.log(\"9. 데이터 요청하던 API 재요청\");\r\n    const originalRequest = res.config;\r\n    originalRequest.headers.Authorization = `Bearer ${result.accessToken}`;\r\n    return await axios(originalRequest);\r\n  }\r\n  return res;\r\n};\r\n\r\nconst responseFail = error => {\r\n  // console.log(\"Response Fail Err\", error);\r\n  return Promise.reject(error);\r\n};\r\n\r\njwtAxios.interceptors.request.use(beforeReq, requestFail);\r\njwtAxios.interceptors.response.use(beforeRes, responseFail);\r\n"],"names":["path","concat","SERVER_URL","getMoreProduct","async","pageNum","categoryId","subCategoryId","sortType","url","axios","get","data","error","console","log","useNavigate","navigate","getProductFirst","res","getProduct","mainCategoryId","getProductDetail","serverData","iproduct","Wrap","styled","div","_templateObject","_taggedTemplateLiteral","SideBarWrap","_templateObject2","ButtonWrap","_templateObject3","Common","color","p300","Write","button","_templateObject4","Chat","_templateObject5","Like","_templateObject6","Profile","_templateObject7","_templateObject8","SideBar","_ref","setSelectedItem","setActiveBtn","handleLinkClick","subItem","sessionStorage","setItem","_jsx","children","_jsxs","Link","to","onClick","region","title","list","MainMorePage","location","useLocation","pathname","state","urlParseArr","split","parseMainCategory","parseInt","parseSubCategory","setPageNum","useState","setSortType","datas","setDatas","filterData","setFilterData","regionNum","setRegionNum","districtNum","setDistrictNum","fetchData","_sortType","useEffect","districtData","filter","item","addr","includes","slice","Layout","MoreWrap","className","src","onChange","e","regionIndex","findIndex","target","value","map","index","selectedRegion","districtIndex","indexOf","regionFilter","_item","categories","mainCategory","subCategory","handlePageChangeDetails","prodMainPic","alt","rentalPrice","toLocaleString","view","Pagination","current","_tempPage","total","pageSize","primary","p100","p200","p400","p500","p600","jwtAxios","create","interceptors","request","use","config","memberInfo","getCookie","Promise","reject","response","accessToken","headers","Authorization","result","refreshToken","host","header","refreshJWT","setCookie","JSON","stringify","originalRequest"],"sourceRoot":""}