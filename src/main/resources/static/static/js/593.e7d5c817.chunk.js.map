{"version":3,"file":"static/js/593.e7d5c817.chunk.js","mappings":"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","sources":["api/main/mainMore_api.js","pages/main/MainMoreSearchPage.js","styles/main/mainMoreStyle.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { jwtAxios } from \"../../util/jwtUtil\";\r\nconst path = `${SERVER_URL}/api`;\r\n\r\nconst failPostDatas = () => {\r\n  const navigate = useNavigate();\r\n  navigate(\"/\");\r\n};\r\n\r\nexport const getMoreProduct = async (pageNum, categoryId, subCategoryId, sortType) => {\r\n  try {\r\n    let url;\r\n    console.log(pageNum, categoryId, subCategoryId, sortType)\r\n    if (sortType) url = `${path}/prod?sort=${sortType}&page=${pageNum}&mc=${categoryId}&sc=${subCategoryId}`;\r\n    else url = `${path}/prod?page=${pageNum}&mc=${categoryId}&sc=${subCategoryId}`;\r\n    const res = await axios.get(url);\r\n\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    failPostDatas(\"/\");\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { SideBar } from \"../../components/SideBar\";\r\nimport { MoreWrap } from \"../../styles/main/mainMoreStyle\";\r\nimport { Pagination } from \"antd\";\r\nimport Layout from \"../../layouts/Layout\";\r\nimport { getMoreProduct } from \"../../api/main/mainMore_api\";\r\nimport Like from \"../../components/details/Like\";\r\nimport { getProductDetail } from \"../../api/main/main_api\"; // API 호출 함수 import\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport JoinPopUp, { ModalBackground } from \"../../components/joinpopup/JoinPopUp\";\r\n\r\nconst region = [\r\n  {\r\n    title: \"대구광역시\",\r\n    list: [\r\n      \"전체\",\r\n      \"달서구\",\r\n      \"중구\",\r\n      \"동구\",\r\n      \"서구\",\r\n      \"남구\",\r\n      \"북구\",\r\n      \"수성구\",\r\n      \"달성군\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"서울특별시\",\r\n    list: [\r\n      \"전체\",\r\n      \"종로구\",\r\n      \"중구\",\r\n      \"용산구\",\r\n      \"성동구\",\r\n      \"광진구\",\r\n      \"동대문구\",\r\n      \"중랑구\",\r\n      \"성북구\",\r\n      \"강북구\",\r\n      \"도봉구\",\r\n      \"노원구\",\r\n      \"은평구\",\r\n      \"서대문구\",\r\n      \"마포구\",\r\n      \"양천구\",\r\n      \"강서구\",\r\n      \"구로구\",\r\n      \"금천구\",\r\n      \"영등포구\",\r\n      \"동작구\",\r\n      \"관악구\",\r\n      \"서초구\",\r\n      \"강남구\",\r\n      \"송파구\",\r\n      \"강동구\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"부산광역시\",\r\n    list: [\r\n      \"전체\",\r\n      \"중구\",\r\n      \"서구\",\r\n      \"동구\",\r\n      \"영도구\",\r\n      \"부산진구\",\r\n      \"동래구\",\r\n      \"남구\",\r\n      \"북구\",\r\n      \"해운대구\",\r\n      \"사하구\",\r\n      \"금정구\",\r\n      \"강서구\",\r\n      \"연제구\",\r\n      \"수영구\",\r\n      \"사상구\",\r\n      \"기장군\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"인천광역시\",\r\n    list: [\r\n      \"전체\",\r\n      \"중구\",\r\n      \"동구\",\r\n      \"미추홀구\",\r\n      \"연수구\",\r\n      \"남동구\",\r\n      \"부평구\",\r\n      \"계양구\",\r\n      \"서구\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"광주광역시\",\r\n    list: [\"전체\", \"동구\", \"서구\", \"남구\", \"북구\", \"광산구\"],\r\n  },\r\n  {\r\n    title: \"대전광역시\",\r\n    list: [\"전체\", \"동구\", \"중구\", \"서구\", \"유성구\", \"대덕구\"],\r\n  },\r\n  {\r\n    title: \"울산광역시\",\r\n    list: [\"전체\", \"중구\", \"남구\", \"동구\", \"북구\"],\r\n  },\r\n];\r\n\r\nconst MainMoreSearchPage = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { pathname, state } = location;\r\n  const urlParseArr = pathname.split(\"/\");\r\n  const parseMainCategory = parseInt(urlParseArr[3]);\r\n  const parseSubCategory = parseInt(urlParseArr[4]);\r\n\r\n  // 페이지 번호\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const [sortType, setSortType] = useState(0);\r\n  // 전지역 출력 데이터\r\n  const [datas, setDatas] = useState(state.result);\r\n  // 지역별 시, 구 분류 데이터\r\n  const [filterData, setFilterData] = useState([]);\r\n  // 지역 선택 관리\r\n  const [regionNum, setRegionListNum] = useState(0);\r\n  const [districtNum, setDistrictNum] = useState(0);\r\n\r\n  const handleRegionChange = e => {\r\n    const regionIndex = region.findIndex(item => item.title === e.target.value);\r\n    setRegionListNum(regionIndex);\r\n    setDistrictNum(0);\r\n  };\r\n\r\n  const regionFilter = e => {\r\n    const selectedRegion = e.target.value;\r\n    const districtIndex = region[regionNum].list.indexOf(selectedRegion);\r\n    setDistrictNum(districtIndex);\r\n  };\r\n\r\n  const handlePageChange = _tempPage => {\r\n    setPageNum(_tempPage);\r\n  };\r\n\r\n  console.log(state);\r\n\r\n  //추후 초기 값 세팅 필요\r\n  useEffect(() => {\r\n    if (sortType !== 0) fetchData(pageNum, sortType);\r\n    else fetchData(pageNum);\r\n  }, [pageNum, sortType]);\r\n\r\n  useEffect(() => {\r\n    const regionData = datas.filter(item =>\r\n      item.addr.includes(region[regionNum].title.slice(0, 2)),\r\n    );\r\n    const districtData = regionData.filter(item =>\r\n      item.addr.includes(region[regionNum].list[districtNum]),\r\n    );\r\n    setFilterData(districtData);\r\n  }, [districtNum, datas, regionNum]);\r\n\r\n  const fetchData = async (pageNum, _sortType) => {\r\n    try {\r\n      const res = await getMoreProduct(\r\n        pageNum,\r\n        parseMainCategory,\r\n        parseSubCategory,\r\n        _sortType,\r\n      );\r\n      setDatas(res);\r\n      console.log(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // details 페이지로 이동\r\n  const { isLogin } = useCustomLogin();\r\n  const [loginState, setLoginState] = useState(false);\r\n\r\n  const handlePageChangeDetails = async _item => {\r\n    if (isLogin) {\r\n      const url = `/details/${_item.categories.mainCategory}/${_item.categories.subCategory}/${_item.iproduct}`;\r\n      const serverData = {\r\n        mainCategoryId: _item.categories.mainCategory,\r\n        subCategoryId: _item.categories.subCategory,\r\n        iproduct: _item.iproduct,\r\n      };\r\n      // const res = await getProductDetail(serverData);\r\n      navigate(url);\r\n    } else {\r\n      setLoginState(true)\r\n    }\r\n  };\r\n  const closeModal = () => {\r\n    setLoginState(false);\r\n    navigate(`/login`);\r\n  };\r\n\r\n  const searchValue = sessionStorage.getItem(\"searchValue\");\r\n\r\n  //   // URL에서 검색어 매개변수 추출\r\n  //   const [search, setSearch] = useState(\"\");\r\n  //   useEffect(() => {\r\n  //     const searchParams = new URLSearchParams(location.search);\r\n  //     const searchParam = searchParams.get(\"search\");\r\n  //     setSearch(searchParam);\r\n  //   }, [location]);\r\n\r\n  return (\r\n    <Layout>\r\n      {loginState && (\r\n        <>\r\n          <JoinPopUp txt=\"로그인 후 이용해주세요.\" onConfirm={closeModal} />\r\n          <ModalBackground></ModalBackground>\r\n        </>\r\n      )}\r\n      <SideBar />\r\n      <MoreWrap>\r\n        <div className=\"header-wrap\">\r\n          <div className=\"header-cate-wrap\" style={{ flexDirection: \"column\" }}>\r\n            <div>검색어 : {searchValue}</div>\r\n            <div>{datas.length}개</div>\r\n          </div>\r\n          <div>\r\n            <div className=\"bt-wrap\">\r\n              <div>\r\n                <button onClick={() => setSortType(0)}>최신순</button>\r\n                <img src=\"/images/main/line.svg\" />\r\n                <button onClick={() => setSortType(2)}>조회순</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"region-wrap\">\r\n              <select onChange={handleRegionChange}>\r\n                {region.map((item, index) => {\r\n                  return (\r\n                    <option key={`regionTitle${index}`}>{item.title}</option>\r\n                  );\r\n                })}\r\n              </select>\r\n              <select\r\n                onChange={e => regionFilter(e)}\r\n                value={region[regionNum].list[districtNum]}\r\n              >\r\n                {region[regionNum].list.map((item, index) => {\r\n                  return <option key={`regionList${index}`}>{item}</option>;\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"main-wrap\">\r\n          {datas &&\r\n            datas.map((item, index) => (\r\n              <div\r\n                className=\"item-wrap\"\r\n                key={`MainMore-item-${index}`}\r\n                onClick={() => {\r\n                  handlePageChangeDetails(item);\r\n                }}\r\n              >\r\n                <img\r\n                  className=\"item-image\"\r\n                  src={`/pic/${item.prodMainPic}`}\r\n                  alt=\"\"\r\n                />\r\n\r\n                <div className=\"desc-wrap\">\r\n                  <span className=\"desc-title\">{item.title}</span>\r\n                  <hr></hr>\r\n                  <div className=\"desc-price\">\r\n                    {item.rentalPrice.toLocaleString()}\r\n                  </div>\r\n                  <div className=\"desc-addr\">{item.addr}</div>\r\n                  <div className=\"view\">조회수{item.view}</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div className=\"pagination\">\r\n          <Pagination\r\n            current={pageNum}\r\n            onChange={handlePageChange}\r\n            total={Math.floor(filterData.length / 16) + 1}\r\n            pageSize={10}\r\n          />\r\n        </div>\r\n      </MoreWrap>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MainMoreSearchPage;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const MoreWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 30px;\r\n  \r\n\r\n  .header-wrap {\r\n    width: 1260px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding-bottom: 30px;\r\n    \r\n\r\n  .header-cate-wrap {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    max-width: 100%;\r\n    gap: 10px;\r\n    height: 30px;\r\n    font-size: 20px;\r\n  }\r\n  .bt-wrap {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    padding-bottom: 20px;\r\n    >div{\r\n      display: flex;\r\n      width: 150px;\r\n      justify-content: space-evenly;\r\n    }\r\n    button {\r\n      border: none;\r\n      background: transparent;\r\n      font-size: 15px;\r\n      color: #777;\r\n      cursor: pointer;\r\n    }\r\n    img {\r\n      width: 2px;\r\n      height: 15px;\r\n    }\r\n    option {\r\n      background-color: #fff;\r\n    }\r\n  }\r\n  .region-wrap {\r\n      width: 310px;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      select {\r\n        width: 150px;\r\n        height: 30px;\r\n        border: 2px solid #2c39b5;\r\n      }\r\n    }\r\n}\r\n\r\n\r\n  .main-wrap {\r\n    max-width: 1260px;\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-gap: 30px;\r\n\r\n    .desc-wrap {\r\n      line-height: 30px;\r\n      text-align: left;\r\n      .desc-title {\r\n        font-size: 15px;\r\n        color: #777;\r\n      }\r\n      hr {\r\n        width: 280px;\r\n        border: 1px solid #2c39b5;\r\n        margin: 0;\r\n      }\r\n      .desc-price {\r\n        font-weight: 500;\r\n        font-size: 20px;\r\n      }\r\n      .desc-ad {\r\n        color: #777;\r\n        font-size: 14px;\r\n      }\r\n      .view {\r\n        color: #777;\r\n        font-size: 12px;\r\n      }\r\n    }\r\n  }\r\n  .item-wrap {\r\n    position: relative;\r\n    cursor: pointer;\r\n    .item-image {\r\n      width: 300px;\r\n      height: 300px;\r\n      border: none;\r\n      border-radius: 4px;\r\n    }\r\n    .like-wrap {\r\n      position: absolute;\r\n      margin: 0 auto;\r\n      right: 15px;\r\n      top: 15px;\r\n      button {\r\n        margin: auto;\r\n      }\r\n    }\r\n  \r\n  }\r\n  .ant-select-show-search {\r\n    display: none;\r\n  }\r\n\r\n  .pagination {\r\n    padding-top: 80px;\r\n    padding-bottom: 80px;\r\n  }\r\n\r\n`;"],"names":["path","concat","SERVER_URL","getMoreProduct","async","pageNum","categoryId","subCategoryId","sortType","url","console","log","axios","get","data","error","useNavigate","navigate","region","title","list","MainMoreSearchPage","location","useLocation","pathname","state","urlParseArr","split","parseMainCategory","parseInt","parseSubCategory","setPageNum","useState","setSortType","datas","setDatas","result","filterData","setFilterData","regionNum","setRegionListNum","districtNum","setDistrictNum","useEffect","fetchData","districtData","filter","item","addr","includes","slice","_sortType","res","isLogin","useCustomLogin","loginState","setLoginState","searchValue","sessionStorage","getItem","_jsxs","Layout","children","_Fragment","_jsx","JoinPopUp","txt","onConfirm","closeModal","ModalBackground","SideBar","MoreWrap","className","style","flexDirection","length","onClick","src","onChange","e","regionIndex","findIndex","target","value","map","index","selectedRegion","districtIndex","indexOf","regionFilter","_item","categories","mainCategory","subCategory","iproduct","handlePageChangeDetails","prodMainPic","alt","rentalPrice","toLocaleString","view","Pagination","current","_tempPage","total","Math","floor","pageSize","styled","div","_templateObject","_taggedTemplateLiteral"],"sourceRoot":""}