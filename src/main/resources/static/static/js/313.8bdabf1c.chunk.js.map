{"version":3,"file":"static/js/313.8bdabf1c.chunk.js","mappings":"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","sources":["api/main/mainMore_api.js","components/sideBarStyle.js","components/SideBar.js","pages/main/MainMorePage.js","styles/CommonStyles.js","styles/main/mainMoreStyle.js","util/jwtUtil.js"],"sourcesContent":["import axios from \"axios\";\nimport { SERVER_URL } from \"../config\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtAxios } from \"../../util/jwtUtil\";\nconst path = `${SERVER_URL}/api`;\n\nconst failPostDatas = () => {\n  const navigate = useNavigate();\n  navigate(\"/\");\n};\n\nexport const getMoreProduct = async (pageNum, categoryId, subCategoryId, sortType) => {\n  try {\n    let url;\n    if (sortType) url = `${path}/prod?sort=${sortType}&page=${pageNum}&mc=${categoryId}&sc=${subCategoryId}`;\n    else url = `${path}/prod?page=${pageNum}&mc=${categoryId}&sc=${subCategoryId}`;\n    const res = await axios.get(url);\n\n    return res.data;\n  } catch (error) {\n    console.log(error);\n    failPostDatas(\"/\");\n  }\n};\n\n\n\n\nexport const postProduct = async () => {\n  try {\n    const res = await axios.post(`${path}`);\n    return res;\n  } catch (error) {\n    console.log(error);\n    failPostDatas(\"/\");\n  }\n};\n\nexport const putProduct = async () => {\n  try {\n    const res = await axios.put(`${path}`);\n    return res;\n  } catch (error) {\n    console.log(error);\n    failPostDatas(\"/\");\n  }\n};\n\nexport const patchProduct = async () => {\n  try {\n    const res = await axios.patch(`${path}`);\n    return res;\n  } catch (error) {\n    console.log(error);\n    failPostDatas(\"/\");\n  }\n};\n\nexport const deleteProduct = async () => {\n  try {\n    const res = await axios.delete(`${path}`);\n    return res;\n  } catch (error) {\n    console.log(error);\n    failPostDatas(\"/\");\n  }\n};","import styled from \"@emotion/styled\";\nimport { Common } from \"../styles/CommonStyles\";\n\nexport const Wrap = styled.div`\n  z-index: 3;\n  position: fixed;\n  top: 300px;\n  right: 50px;\n`;\n\nexport const SideBarWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 70px;\n  height: 440px;\n  background-color: #eeeef1;\n  border-radius: 30px;\n`;\n\nexport const ButtonWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  padding: 10px;\n  div {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    p {\n      padding-top: 3px;\n      font-size: 1.4rem;\n      color: ${Common.color.p300};\n    }\n  }\n`;\nexport const Write = styled.button`\n  width: 40px;\n  height: 40px;\n\n  background: url(\"/images/main/plus.svg\");\n\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n`;\nexport const Chat = styled.button`\n  width: 40px;\n  height: 40px;\n\n  background: url(\"/images/main/chat.svg\") center;\n\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const Like = styled.button`\n  width: 40px;\n  height: 40px;\n\n  background: url(\"/images/main/heart.svg\");\n\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n`;\nexport const Profile = styled.button`\n  width: 40px;\n  height: 40px;\n\n  background: url(\"/images/main/profile.svg\");\n\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n`;\nexport const Call = styled.button`\n  width: 40px;\n  height: 40px;\n\n  background: url(\"/images/main/phone.svg\");\n\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport {\n  ButtonWrap,\n  Call,\n  Chat,\n  Like,\n  Profile,\n  SideBarWrap,\n  Wrap,\n  Write,\n} from \"./sideBarStyle\";\nimport { Link } from \"react-router-dom\";\n\nexport const SideBar = ({ setSelectedItem, setActiveBtn }) => {\n  const handleLinkClick = subItem => {\n    if (setSelectedItem && setActiveBtn) {\n      setSelectedItem(subItem);\n      setActiveBtn(subItem);\n    }\n    sessionStorage.setItem(\"selectedItem\", subItem);\n  };\n\n  return (\n    <Wrap>\n      <SideBarWrap>\n        <ButtonWrap>\n          <Link to=\"/write\">\n            <div>\n              <Write></Write>\n              <p>등록</p>\n            </div>\n          </Link>\n          <Link to=\"/\">\n            <div>\n              <Chat></Chat>\n              <p>채팅</p>\n            </div>\n          </Link>\n          <Link\n            to=\"/my?interest\"\n            onClick={() => {\n              handleLinkClick(\"관심 목록\");\n            }}\n          >\n            <div>\n              <Like></Like>\n              <p>관심</p>\n            </div>\n          </Link>\n          <Link\n            to=\"/my\"\n            onClick={() => {\n              handleLinkClick(\"대여중\");\n            }}\n          >\n            <div>\n              <Profile></Profile>\n              <p>MY</p>\n            </div>\n          </Link>\n          <Link to=\"/customer\">\n            <div>\n              <Call></Call>\n              <p>고객센터</p>\n            </div>\n          </Link>\n        </ButtonWrap>\n      </SideBarWrap>\n    </Wrap>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { SideBar } from \"../../components/SideBar\";\nimport { MoreWrap } from \"../../styles/main/mainMoreStyle\";\nimport { Pagination } from \"antd\";\nimport Layout from \"../../layouts/Layout\";\nimport { getMoreProduct } from \"../../api/main/mainMore_api\";\n\nconst region = [\n  {\n    title: \"대구광역시\",\n    list: [\n      \"중구\",\n      \"동구\",\n      \"서구\",\n      \"남구\",\n      \"북구\",\n      \"수성구\",\n      \"달서구\",\n      \"달성군\",\n    ],\n  },\n  {\n    title: \"서울특별시\",\n    list: [\n      \"종로구\",\n      \"중구\",\n      \"용산구\",\n      \"성동구\",\n      \"광진구\",\n      \"동대문구\",\n      \"중랑구\",\n      \"성북구\",\n      \"강북구\",\n      \"도봉구\",\n      \"노원구\",\n      \"은평구\",\n      \"서대문구\",\n      \"마포구\",\n      \"양천구\",\n      \"강서구\",\n      \"구로구\",\n      \"금천구\",\n      \"영등포구\",\n      \"동작구\",\n      \"관악구\",\n      \"서초구\",\n      \"강남구\",\n      \"송파구\",\n      \"강동구\",\n    ],\n  },\n  {\n    title: \"부산광역시\",\n    list: [\n      \"중구\",\n      \"서구\",\n      \"동구\",\n      \"영도구\",\n      \"부산진구\",\n      \"동래구\",\n      \"남구\",\n      \"북구\",\n      \"해운대구\",\n      \"사하구\",\n      \"금정구\",\n      \"강서구\",\n      \"연제구\",\n      \"수영구\",\n      \"사상구\",\n      \"기장군\",\n    ],\n  },\n  {\n    title: \"인천광역시\",\n    list: [\n      \"중구\",\n      \"동구\",\n      \"미추홀구\",\n      \"연수구\",\n      \"남동구\",\n      \"부평구\",\n      \"계양구\",\n      \"서구\",\n    ],\n  },\n  {\n    title: \"광주광역시\",\n    list: [\"동구\", \"서구\", \"남구\", \"북구\", \"광산구\"],\n  },\n  {\n    title: \"대전광역시\",\n    list: [\"동구\", \"중구\", \"서구\", \"유성구\", \"대덕구\"],\n  },\n  {\n    title: \"울산광역시\",\n    list: [\"중구\", \"남구\", \"동구\", \"북구\"],\n  },\n];\n\nconst MainMorePage = () => {\n  const location = useLocation();\n  const { pathname, state } = location;\n  const urlParseArr = pathname.split(\"/\");\n  const parseMainCategory = parseInt(urlParseArr[3]);\n  const parseSubCategory = parseInt(urlParseArr[4]);\n\n  // 페이지 번호\n  const [pageNum, setPageNum] = useState(1);\n  const [sortType, setSortType] = useState(0);\n  // 전지역 데이터\n  const [datas, setDatas] = useState([]);\n  // 지역별 시, 구 분류 데이터\n  const [filterData, setFilterData] = useState([]);\n  // 지역 선택 관리\n  const [regionNum, setRegionNum] = useState(0);\n  const [districtNum, setDistrictNum] = useState(0);\n\n  const fetchData = async (pageNum, _sortType) => {\n    try {\n      const res = await getMoreProduct(\n        pageNum,\n        parseMainCategory,\n        parseSubCategory,\n        _sortType,\n      );\n      setDatas(res);\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleRegionChange = e => {\n    const regionIndex = region.findIndex(item => item.title === e.target.value);\n    setRegionNum(regionIndex);\n    setDistrictNum(0);\n  };\n\n  const regionFilter = e => {\n    const selectedRegion = e.target.value;\n    const districtIndex = region[regionNum].list.indexOf(selectedRegion);\n    setDistrictNum(districtIndex);\n  };\n\n  const handlePageChange = _tempPage => {\n    setPageNum(_tempPage);\n  };\n\n  // 02-01 소연\n  useEffect(() => {\n    if (sortType !== 0) fetchData(pageNum, sortType);\n    else fetchData(pageNum);\n  }, [pageNum, sortType]);\n\n  useEffect(() => {\n    const regionData = datas.filter(item =>\n      item.addr.includes(region[regionNum].title.slice(0, 2)),\n    );\n    const districtData = regionData.filter(item =>\n      item.addr.includes(region[regionNum].list[districtNum]),\n    );\n    setFilterData(districtData);\n  }, [districtNum, datas, regionNum]);\n\n  return (\n    <Layout>\n      <SideBar />\n      <MoreWrap>\n        <div className=\"header-wrap\">\n          <div className=\"header-cate-wrap\">\n            <div>{state && state.title ? state.title : \"Default Title\"}</div>\n            <div>{datas.length}개</div>\n          </div>\n          <div>\n            <div className=\"bt-wrap\">\n              <div>\n                <button onClick={() => setSortType(0)}>최신순</button>\n                <img src=\"/images/main/line.svg\" />\n                <button onClick={() => setSortType(2)}>조회순</button>\n              </div>\n            </div>\n            <div className=\"region-wrap\">\n              <select onChange={handleRegionChange}>\n                {region.map((item, index) => {\n                  return (\n                    <option key={`regionTitle${index}`}>{item.title}</option>\n                  );\n                })}\n              </select>\n              <select\n                onChange={e => regionFilter(e)}\n                value={region[regionNum].list[districtNum]}\n              >\n                {region[regionNum].list.map((item, index) => {\n                  return <option key={`regionList${index}`}>{item}</option>;\n                })}\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"main-wrap\">\n          {filterData &&\n            filterData.map((item, index) => (\n              <div\n                className=\"item-wrap\"\n                key={`MainMore-item-${index}`}\n                onClick={() => handlePageChange(item)}\n              >\n                <img\n                  className=\"item-image\"\n                  src={`/pic/${item.prodMainPic}`}\n                  alt=\"제품 이미지\"\n                />\n\n                <div className=\"desc-wrap\">\n                  <span className=\"desc-title\">{item.title}</span>\n                  <hr></hr>\n                  <div className=\"desc-price\">\n                    {item.rentalPrice.toLocaleString()}\n                  </div>\n                  <div className=\"desc-addr\">{item.addr}</div>\n                  <div className=\"view\">조회수{item.view}</div>\n                </div>\n              </div>\n            ))}\n        </div>\n        <div className=\"pagination\">\n          <Pagination\n            current={pageNum}\n            onChange={handlePageChange}\n            total={Math.floor(filterData.length / 16) + 1}\n            pageSize={10}\n          />\n        </div>\n      </MoreWrap>\n    </Layout>\n  );\n};\n\nexport default MainMorePage;\n","export const Common = {\n  // 숫자가 높을수록 밝은 색\n  color: {\n    primary: \"#2C39B5\",\n    p100: \"#000000\",\n    p200: \"#4B4B4B\",\n    p300: \"#777777\",\n    p400: \"#E4E7FF\",\n    p500: \"#F2F2FF\",\n    p600: \"#FFFFFF\",\n  },\n};\n","import styled from \"@emotion/styled\";\n\nexport const MoreWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 30px;\n  \n\n  .header-wrap {\n    width: 1260px;\n    display: flex;\n    justify-content: space-between;\n    padding-bottom: 30px;\n    \n\n  .header-cate-wrap {\n    display: flex;\n    justify-content: space-between;\n    max-width: 100%;\n    gap: 10px;\n    height: 30px;\n    font-size: 20px;\n  }\n  .bt-wrap {\n    display: flex;\n    justify-content: flex-end;\n    padding-bottom: 20px;\n    >div{\n      display: flex;\n      width: 150px;\n      justify-content: space-evenly;\n    }\n    button {\n      border: none;\n      background: transparent;\n      font-size: 15px;\n      color: #777;\n      cursor: pointer;\n    }\n    img {\n      width: 2px;\n      height: 15px;\n    }\n    option {\n      background-color: #fff;\n    }\n  }\n  .region-wrap {\n      width: 310px;\n      display: flex;\n      justify-content: space-between;\n      select {\n        width: 150px;\n        height: 30px;\n        border: 2px solid #2c39b5;\n      }\n    }\n}\n\n\n  .main-wrap {\n    max-width: 1260px;\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-gap: 30px;\n\n    .desc-wrap {\n      line-height: 30px;\n      text-align: left;\n      .desc-title {\n        font-size: 15px;\n        color: #777;\n      }\n      hr {\n        width: 280px;\n        border: 1px solid #2c39b5;\n        margin: 0;\n      }\n      .desc-price {\n        font-weight: 500;\n        font-size: 20px;\n      }\n      .desc-ad {\n        color: #777;\n        font-size: 14px;\n      }\n      .view {\n        color: #777;\n        font-size: 12px;\n      }\n    }\n  }\n  .item-wrap {\n    position: relative;\n    cursor: pointer;\n    .item-image {\n      width: 300px;\n      height: 300px;\n      border: none;\n      border-radius: 4px;\n    }\n    \n  \n  }\n  .ant-select-show-search {\n    display: none;\n  }\n\n  .pagination {\n    padding-top: 80px;\n    padding-bottom: 80px;\n  }\n\n`;","import axios from \"axios\";\nimport { getCookie, setCookie } from \"./cookieUtil\";\nimport { SERVER_URL } from \"../api/config\";\n\nexport const jwtAxios = axios.create();\n\nconst beforeReq = config => {\n  // console.log(\"1. 요청전 전달\", config);\n  // console.log(\"2. 쿠키로 토큰가져오기\");\n  const memberInfo = getCookie(\"member\");\n\n  if (!memberInfo) {\n    // console.log(\"쿠키 정보 없네요.\");\n    return Promise.reject({ response: { data: { error: \"Login하세요.\" } } });\n  }\n  // console.log(\"3. 쿠키에서 토큰 정보를 뜯는다.\");\n  const { accessToken } = memberInfo;\n  // console.log(\"4. 엑세스토큰 정보\", accessToken);\n  config.headers.Authorization = `Bearer ${accessToken}`;\n  return config;\n};\n\nconst requestFail = error => {\n  // console.log(\"요청후 실패시\", error);\n  return Promise.reject(error);\n};\n\nconst refreshJWT = async (accessToken, refreshToken) => {\n  const host = SERVER_URL;\n  const header = { headers: { Authorization: `Bearer ${accessToken}` } };\n  const res = await axios.get(\n    `${host}/api/user/refresh-token?refreshToken=${refreshToken}`,\n    header,\n  );\n  // console.log(\"1. refreshToken 토큰 요청\");\n  // console.log(\"2. 백엔드에서 새로 준 값\", res.data);\n  return res.data;\n};\n\nconst beforeRes = async res => {\n  // console.log(\"Response 전처리\", res);\n  const data = res.data;\n  // console.log(\"1. Response 오기전 서버 전달해준 데이터, data\");\n  if (data && data.error === \"ERROR_ACCESS_TOKEN\") {\n    // console.log(\"2. 일반적 오류가 아닌 엑세스 토큰 에러입니다.\");\n    // console.log(\"3. 새로운 토큰을 요청해야 합니다.\");\n    // console.log(\"4. 쿠키에 있는 정보를 읽어서 다시 시도합니다.\");\n    const memberInfo = getCookie(\"member\");\n    // console.log(\"5. 쿠키 토큰 정보 AccessToken\", memberInfo.accessToken);\n    // console.log(\"6. 쿠키 토큰 정보 RefreshToken\", memberInfo.refreshToken);\n    // console.log(\"7. 위의 정보로 새로운 토큰을 요청합니다.\");\n    const result = await refreshJWT(\n      memberInfo.accessToken,\n      memberInfo.refreshToken,\n    );\n    // console.log(\"8. 요청 이후 되돌아와서 새로운 정보로 쿠키를 업데이트\");\n    (memberInfo.accessToken = result.accessToken),\n      (memberInfo.refreshToken = result.refreshToken),\n      setCookie(\"member\", JSON.stringify(memberInfo));\n\n    // console.log(\"9. 데이터 요청하던 API 재요청\");\n    const originalRequest = res.config;\n    originalRequest.headers.Authorization = `Bearer ${result.accessToken}`;\n    return await axios(originalRequest);\n  }\n  return res;\n};\n\nconst responseFail = error => {\n  // console.log(\"Response Fail Err\", error);\n  return Promise.reject(error);\n};\n\njwtAxios.interceptors.request.use(beforeReq, requestFail);\njwtAxios.interceptors.response.use(beforeRes, responseFail);\n"],"names":["path","concat","SERVER_URL","failPostDatas","useNavigate","navigate","getMoreProduct","async","pageNum","categoryId","subCategoryId","sortType","url","axios","get","data","error","console","log","Wrap","styled","div","_templateObject","_taggedTemplateLiteral","SideBarWrap","_templateObject2","ButtonWrap","_templateObject3","Common","color","p300","Write","button","_templateObject4","Chat","_templateObject5","Like","_templateObject6","Profile","_templateObject7","Call","_templateObject8","SideBar","_ref","setSelectedItem","setActiveBtn","handleLinkClick","subItem","sessionStorage","setItem","_jsx","children","_jsxs","Link","to","onClick","region","title","list","MainMorePage","location","useLocation","pathname","state","urlParseArr","split","parseMainCategory","parseInt","parseSubCategory","setPageNum","useState","setSortType","datas","setDatas","filterData","setFilterData","regionNum","setRegionNum","districtNum","setDistrictNum","fetchData","_sortType","res","handlePageChange","_tempPage","useEffect","districtData","filter","item","addr","includes","slice","Layout","MoreWrap","className","length","src","onChange","e","regionIndex","findIndex","target","value","map","index","selectedRegion","districtIndex","indexOf","regionFilter","prodMainPic","alt","rentalPrice","toLocaleString","view","Pagination","current","total","Math","floor","pageSize","primary","p100","p200","p400","p500","p600","jwtAxios","create","interceptors","request","use","config","memberInfo","getCookie","Promise","reject","response","accessToken","headers","Authorization","result","refreshToken","host","header","refreshJWT","setCookie","JSON","stringify","originalRequest"],"sourceRoot":""}