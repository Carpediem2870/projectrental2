{"version":3,"file":"static/js/345.4ea695c6.chunk.js","mappings":"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","sources":["components/joinpopup/JoinPopUp.js","components/login/IdFind.js","components/login/PwFind.js","pages/login/LoginPage.js","styles/join/JoinPageStyle.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport React from \"react\";\n\nexport const ModalBackground = styled.div`\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth: 100%;\nheight: 100%;\nbackground: rgba(0, 0, 0, 0.5);\nz-index: 999;\n`\n\nconst JoinPopUp = ({ txt, onConfirm }) => {\n  const JoinPopUp = styled.div`\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1000;\n\n    width: 300px;\n    height: 180px;\n    display: flex;\n\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 30px;\n\n    border-radius: 10px;\n    border: 1px solid #2c39b5;\n    background: #fff;\n    b {\n      color: #000;\n      text-align: center;\n      font-size: 20px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: normal;\n    }\n    button {\n      width: 100px;\n      height: 50px;\n      border-radius: 5px;\n      border: none;\n      background: #2c39b5;\n      cursor: pointer;\n      color: #fff;\n      font-size: 20px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: normal;\n    }\n  `;\n\n  return (\n    <JoinPopUp>\n      <b>{txt}</b>\n      <button onClick={onConfirm}>확인</button>\n    </JoinPopUp>\n  );\n};\n\nexport default JoinPopUp;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  IdBox,\n  LoginBox,\n  Logo,\n  LogoZone,\n} from \"../../styles/login/LoginPageStyle\";\nimport { BtSection, CancelBt, SaveBt } from \"../../styles/join/JoinPageStyle\";\nimport styled from \"@emotion/styled\";\nimport { idPost } from \"../../api/login/login_api\";\n\nconst IdFindStyle = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1000;\n\n  width: 500px;\n  height: 460px;\n  background: #fff;\n  padding-top: 20px;\n`;\n\nconst IdFind = ({ closeModal }) => {\n  const [userNum, setUserNum] = useState(\"\");\n  const [userList, setUserList] = useState({ uid: \"\", iauth: 0 });\n  // useEffect(() => {\n  //   idPost(phone, uid, userList)\n  // }, [])\n\n  //  전화번호 필드 바꾸기\n  // const handleChange = e => {\n  //   setUserNum(e.target.value);\n  // };\n\n  const [confirmClick, setConfirmClick] = useState(false);\n  const loginUserId = () => {\n    setConfirmClick(true);\n    const obj = {\n      phone: userNum,\n    };\n    idPost(obj, setUserList);\n  };\n\n  // 상태에 따라 문구 바꾸기\n  let content;\nif (confirmClick) {\n  if (userList.uid) {\n    content = (\n      <p>\n        고객님의 아이디입니다. <br />\n      </p>\n    );\n  } else {\n    content = (\n      <p style={{ color: \"red\" }}>\n        휴대폰 번호가 잘못 입력되었습니다.\n        <br />\n        다시 입력해주세요.\n      </p>\n    );\n  }\n} else {\n  content = (\n    <p>\n      아이디를 잊으셨나요? <br />\n      휴대폰 번호를 입력해 주세요.\n    </p>\n  );\n}\n\n\n  return (\n    <IdFindStyle>\n      <LogoZone>\n        <Logo src=\"/images/logo.svg\" style={{ marginBottom: \"20px\" }} />\n      </LogoZone>\n      <LoginBox height={\"340px\"} mgbtm={\"50px\"}>\n      {content}\n\n        {!userList.uid && (\n          <IdBox\n            type=\"text\"\n            placeholder=\"휴대폰 번호 예) 010-0000-0000\"\n            value={userNum}\n            onChange={e => setUserNum(e.target.value)}\n          />\n        )}\n        {userList.uid && <IdBox value={`아이디: ${userList.uid}`} />}\n\n        <BtSection width={\"380px\"}>\n          <CancelBt onClick={closeModal}>닫기</CancelBt>\n          <SaveBt onClick={() => loginUserId(userNum)}>확인</SaveBt>\n          {/* 사용자 정보 : {userList.iauth} : {userList.uid} */}\n        </BtSection>\n      </LoginBox>\n    </IdFindStyle>\n  );\n};\n\nexport default IdFind;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { IdBox, LoginBox, Logo } from \"../../styles/login/LoginPageStyle\";\nimport { BtSection, CancelBt, SaveBt } from \"../../styles/join/JoinPageStyle\";\n\nconst PwFindStyle = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1000;\n\n  width: 500px;\n  height: 500px;\n  background: #fff;\n  padding-top: 20px;\n`;\n\nconst PwFind = ({ closeModal, onConfirm }) => {\n  return (\n    <PwFindStyle>\n      <Logo>로고</Logo>\n      <LoginBox height={\"380px\"} mgbtm={\"50px\"}>\n        <p>\n          비밀번호를 잊으셨나요? <br />\n          아이디와 휴대폰 번호를 입력해 주세요.\n        </p>\n        <IdBox type=\"text\" placeholder=\"아이디\" />\n        <IdBox type=\"text\" placeholder=\"휴대폰 번호\" />\n        <BtSection width={\"380px\"} mgtop={\"50px\"}>\n          <CancelBt onClick={closeModal}>취소</CancelBt>\n          <SaveBt onClick={onConfirm}>확인</SaveBt>\n        </BtSection>\n      </LoginBox>\n    </PwFindStyle>\n  );\n};\n\nexport default PwFind;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Layout from \"../../layouts/Layout\";\nimport { login, loginPostAsync } from \"../../slices/loginSlice\";\nimport {\n  DivisionLine,\n  IdBox,\n  LoginBox,\n  LoginBt,\n  LoginPageStyle,\n  Logo,\n  LogoZone,\n  PwBox,\n} from \"../../styles/login/LoginPageStyle\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport JoinPopUp, {\n  ModalBackground,\n} from \"../../components/joinpopup/JoinPopUp\";\nimport IdFind from \"../../components/login/IdFind\";\nimport { useNavigate } from \"react-router-dom\";\nimport PwFind from \"../../components/login/PwFind\";\n\nconst initState = {\n  uid: \"\",\n  upw: \"\",\n};\n\nconst LoginPage = () => {\n  const [loginParam, setLoginParam] = useState(initState);\n\n  const handleChange = e => {\n    loginParam[e.target.name] = e.target.value;\n    setLoginParam({ ...loginParam });\n  };\n\n  // 커스터훅 사용하기\n  const { doLogin, isLogin, moveToPath } = useCustomLogin();\n\n  const dispatch = useDispatch();\n\n  const [showModal, setShowModal] = useState(false);\n  const handleClick = async () => {\n    // dispatch(login(loginParam));\n    // dispatch(loginPostAsync({ loginParam, successFn, failFn, errorFn }));\n    try {\n      await doLogin({ loginParam, successFn, failFn, errorFn });\n    } catch (error) {\n      console.log(\"login error\");\n    }\n  };\n\n  // const errorFn = error => {\n  //   console.log(\"서버 에러\", error);\n  //   // openModal(\"비밀번호 에러\", \"비밀번호를 확인해주세요.\", closeModal);\n  //   setShowModal(true);\n  // };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  // 아이디 찾기 버튼 클릭\n  const [idFindModal, setIdFindModal] = useState(false);\n  const handleIdFind = () => {\n    setIdFindModal(true);\n  };\n  const closeIdFindModal = () => {\n    setIdFindModal(false);\n  };\n  // const ConfirmIdFindModal = _userNum => {\n  //   console.log(\"확인\", _userNum)\n  // }\n\n  // 비밀번호 변경 버튼 클릭\n  const [pwFindModal, setPwFindModal] = useState(false);\n  const handlePwFind = () => {\n    setPwFindModal(true);\n  };\n  const closePwFindModal = () => {\n    setPwFindModal(false);\n  };\n\n  // 회원가입 페이지 이동\n  const navigate = useNavigate();\n  const handleJoin = () => {\n    navigate(`/join/1`);\n  };\n\n  const successFn = result => {\n    console.log(\"성공\", result);\n    moveToPath(\"/\");\n  };\n\n  const failFn = result => {\n    console.log(\"실패\", result);\n    // alert(\"이메일 및 비밀번호 확인하세요.\");\n    setShowModal(true);\n  };\n\n  const [idFail, setIdFail] = useState(false);\n  const [pwFail, setPwFail] = useState(false);\n  const [loginFail, setLoginFail] = useState(false);\n  const errorFn = error => {\n    console.log(\"서버 에러입니다.\", error);\n\n    if (error.response && error.response.status === 456) {\n      setPwFail(true);\n    }\n    if (error.response && error.response.status === 455) {\n      setIdFail(true);\n    }\n\n    if (error.response && error.response.status === 400) {\n      setLoginFail(true);\n    }\n  };\n  const closeIdModal = () => {\n    setIdFail(false);\n  };\n  const closePwModal = () => {\n    setPwFail(false);\n  };\n  const closeLoginModal = () => {\n    setLoginFail(false);\n  };\n\n  return (\n    <Layout>\n      {idFail && (\n        <>\n          <JoinPopUp txt=\"아이디를 확인해주세요.\" onConfirm={closeIdModal} />\n          <ModalBackground></ModalBackground>\n        </>\n      )}\n      {pwFail && (\n        <>\n          <JoinPopUp txt=\"비밀번호를 확인해주세요.\" onConfirm={closePwModal} />\n          <ModalBackground></ModalBackground>\n        </>\n      )}\n      {loginFail && (\n        <>\n          <JoinPopUp\n            txt=\"로그인에 실패하였습니다.\"\n            onConfirm={closeLoginModal}\n          />\n          <ModalBackground></ModalBackground>\n        </>\n      )}\n      <LoginPageStyle>\n        <LogoZone>\n          <Logo src=\"/images/logo.svg\" />\n        </LogoZone>\n        <LoginBox>\n          <p>\n            <img src=\"/images/Billy.svg\" style={{ width: \"50px\" }} />\n            에 오신 것을 환영합니다!\n            <br />\n            로그인 하시면 더욱 다양한 상품들을 대여할 수 있습니다.\n          </p>\n          <IdBox\n            type=\"text\"\n            maxLength={15}\n            placeholder=\"아이디\"\n            name=\"uid\"\n            value={loginParam.uid}\n            onChange={e => handleChange(e)}\n          />\n          <PwBox\n            type=\"password\"\n            maxLength={20}\n            placeholder=\"비밀번호\"\n            name=\"upw\"\n            value={loginParam.upw}\n            onChange={e => handleChange(e)}\n          />\n          <LoginBt onClick={handleClick}>LOGIN</LoginBt>\n          {showModal && (\n            <>\n              <JoinPopUp\n                txt=\"아이디 또는 비밀번호를 확인해주세요.\"\n                onConfirm={closeModal}\n              />\n              <ModalBackground></ModalBackground>\n            </>\n          )}\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              gap: \"50px\",\n              paddingRight: \"30px\",\n            }}\n          >\n            <li onClick={handleIdFind}>아이디 찾기</li>\n            {idFindModal && (\n              <>\n                <IdFind closeModal={closeIdFindModal} />\n                <ModalBackground></ModalBackground>\n              </>\n            )}\n            <DivisionLine></DivisionLine>\n            {/* <li onClick={handlePwFind}>비밀번호 변경</li>\n            {pwFindModal && (\n              <>\n                <PwFind closeModal={closePwFindModal} />\n                <div\n              style={{\n                position: \"fixed\",\n                top: 0,\n                left: 0,\n                width: \"100%\",\n                height: \"100%\",\n                background: \"rgba(0, 0, 0, 0.5)\",\n                zIndex: 999,\n              }}\n            ></div>\n              </>\n            )}\n            <DivisionLine></DivisionLine> */}\n            <li onClick={handleJoin}>회원가입</li>\n          </div>\n        </LoginBox>\n      </LoginPageStyle>\n    </Layout>\n  );\n};\n\nexport default LoginPage;\n","import styled from \"@emotion/styled\";\n\nexport const JoinPageStyle = styled.div`\n  width: 1300px;\n  text-align: center;\n  margin: 0 auto;\n  /* background: skyblue; */\n`;\nexport const JoinBox = styled.form`\n  width: 980px;\n  /* height: 700px; */\n  border-radius: 10px;\n  border: 1px solid #2c39b5;\n  margin: ${props => props.margin ? props.margin : \"0 auto 100px\"};\n  padding: 60px 90px;\n`;\n\nexport const JoinElement = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 15px;\n  margin-bottom: 3px;\n`;\nexport const JoinElementTxt = styled.div`\n  display: flex;\n  p {\n    color: #000;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n  span {\n    color: #ff0303;\n    font-size: 13px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n`;\nexport const JoinElementInputBox = styled.div`\n  display: block;\n  text-align: start;\n`;\nexport const JoinElementInput = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 600px;\n  /* background: pink; */\n  img {\n    width: 180px;\n    height: 180px;\n    border-radius: 5px;\n    border: 1px solid #2c39b5;\n  }\n  input {\n    border-radius: 5px;\n    border: 1px solid #2c39b5;\n\n    width: ${props => (props.width ? props.width : \"600px\")};\n    height: 36px;\n    padding-left: 15px;\n\n    color: #000;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n  div {\n    border-radius: 5px;\n    border: 1px solid #2c39b5;\n\n    width: ${props => (props.width ? props.width : \"600px\")};\n    height: 36px;\n    padding-left: 15px;\n\n    color: #000;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: ${props => (props.lineHight ? props.lineHight : \"normal\")};\n  }\n  /* input[type=\"file\"] {\n    width: 180px;\n    height: 180px;\n  } */\n  /* input[type=\"text\"] {\n    width: ${props => (props.width ? props.width : \"600px\")};\n    height: 36px;\n    padding-left: 15px;\n\n    color: #000;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  } */\n`;\nexport const InputValid = styled.div`\n  color: red;\n  font-size: 15px;\n`;\nexport const ImageInputBt = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n`;\nexport const JoinAddressInput = styled.div`\n  display: block;\n  width: 600px;\n  text-align: start;\n  input {\n    border-radius: 5px;\n    border: 1px solid #2c39b5;\n    width: 600px;\n    height: 36px;\n    padding-left: 15px;\n    margin-top: 10px;\n\n    color: #000;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n`;\nexport const ShowPasswordBt =styled.button`\nbackground: transparent;\nborder: none;\nwidth: 0px;\nheight: 0px;\n`;\nexport const ShowPasswordImg = styled.img`\n  width: 20px !important;\n  height: 20px !important;\n  border: none !important;\n  transform: translate(-150%, 40%);\n  cursor: pointer;\n`;\nexport const ConfirmBt = styled.button`\n  width: 105px;\n  height: 36px;\n  border-radius: 5px;\n  border: 1px solid #2c39b5;\n  background: #2c39b5;\n  cursor: pointer;\n\n  color: #fff;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n// export const AddressBt = styled.button`\n//   width: 105px;\n//   height: 36px;\n//   border-radius: 5px;\n//   border: 1px solid #2c39b5;\n//   background: #fff;\n\n//   color: #777;\n//   font-size: 16px;\n//   font-style: normal;\n//   font-weight: 400;\n//   line-height: normal;\n// `;\nexport const BtSection = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  width: ${props => (props.width ? props.width : \"\")};\n  margin-top: ${props => (props.mgtop ? props.mgtop : \"60px\")};\n  margin-bottom: ${props => (props.mgbtm ? props.mgbtm : \"90px\")};\n`;\nexport const CancelBt = styled.button`\n  width: 150px;\n  height: 50px;\n  border-radius: 10px;\n  background: #f2f2ff;\n  border: none;\n  cursor: pointer;\n\n  color: #2c39b5;\n  font-size: 22px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\nexport const SaveBt = styled(CancelBt)`\n  background: #2c39b5;\n  color: #fff;\n  cursor: pointer;\n`;\n"],"names":["ModalBackground","styled","div","_templateObject","_taggedTemplateLiteral","_ref","txt","onConfirm","JoinPopUp","_templateObject2","_jsxs","children","_jsx","onClick","IdFindStyle","closeModal","userNum","setUserNum","useState","userList","setUserList","uid","iauth","confirmClick","setConfirmClick","content","style","color","LogoZone","Logo","src","marginBottom","LoginBox","height","mgbtm","IdBox","type","placeholder","value","onChange","e","target","concat","BtSection","width","CancelBt","SaveBt","loginUserId","obj","phone","idPost","initState","upw","LoginPage","loginParam","setLoginParam","handleChange","name","doLogin","isLogin","moveToPath","useCustomLogin","showModal","setShowModal","useDispatch","idFindModal","setIdFindModal","pwFindModal","setPwFindModal","navigate","useNavigate","successFn","result","console","log","failFn","idFail","setIdFail","pwFail","setPwFail","loginFail","setLoginFail","errorFn","error","response","status","Layout","_Fragment","closeIdModal","closePwModal","closeLoginModal","LoginPageStyle","maxLength","PwBox","LoginBt","async","display","justifyContent","gap","paddingRight","handleIdFind","IdFind","closeIdFindModal","DivisionLine","handleJoin","JoinPageStyle","JoinBox","form","props","margin","JoinElement","_templateObject3","JoinElementTxt","_templateObject4","JoinElementInputBox","_templateObject5","JoinElementInput","_templateObject6","lineHight","InputValid","_templateObject7","ImageInputBt","button","_templateObject8","JoinAddressInput","_templateObject9","ShowPasswordBt","_templateObject10","ShowPasswordImg","img","_templateObject11","ConfirmBt","_templateObject12","_templateObject13","mgtop","_templateObject14","_templateObject15"],"sourceRoot":""}